import { NextRequest, NextResponse } from 'next/server';
import llmService from '../../../services/llmService';
import { ChatSessionService } from '../../../services/chatSessionService';

export const dynamic = 'force-dynamic';

export async function POST(request: NextRequest) {
  try {
    const { message, userLanguage = 'en', sessionId, userId = 'anonymous' } = await request.json();

    if (!message) {
      return NextResponse.json(
        { error: 'Message is required' },
        { status: 400 }
      );
    }

    console.log('üîÑ Processing message:', message);
    console.log('üåç User language:', userLanguage);
    console.log('üë§ User ID:', userId);
    console.log('üí¨ Session ID:', sessionId);

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —á–∞—Ç-—Å–µ—Å—Å–∏–π
    const chatService = new ChatSessionService(userId);
    
    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
    let currentSessionId = sessionId;
    if (!currentSessionId) {
      currentSessionId = await chatService.createSession(message);
      console.log('üÜï Created new chat session:', currentSessionId);
    }

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await chatService.addMessage(currentSessionId, message, 'user');
    console.log('üíæ Saved user message to database');

    // Process message through LLM service
    const result = await llmService.processUserMessage(message, userLanguage);

    console.log('‚úÖ LLM Service result:', result);

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    await chatService.addMessage(currentSessionId, result.response, 'assistant');
    console.log('üíæ Saved assistant response to database');

    return NextResponse.json({
      ...result,
      sessionId: currentSessionId
    });
  } catch (error) {
    console.error('‚ùå Error processing message:', error);
    return NextResponse.json(
      { 
        error: 'Failed to process message',
        response: "Sorry, I didn't quite understand your request. Can you clarify the transfer details?",
        extractedData: {},
        needsClarification: true
      },
      { status: 500 }
    );
  }
}